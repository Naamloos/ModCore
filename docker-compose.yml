services:
  postgres:
    restart: unless-stopped
    image: postgres:14-alpine
    shm_size: 256mb
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    volumes:
      - modcore_postgres:/var/lib/postgresql/data
    environment:
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
  
  api:
    build: ./api.dockerfile
    restart: unless-stopped
    links:
      - postgres

  # Shards, these define websocket connections with Discord's gateway.
  # Ensure shard_count is correct in .env!!!
  shard_0:
    build: ./shard.dockerfile
    restart: unless-stopped
    links:
      - postgres
    environment:
      - SHARD_ID=0
    env_file:
      - .env
      
  shard_1:
    build: ./shard.dockerfile
    restart: unless-stopped
    links:
      - postgres
    environment:
      - SHARD_ID=1
    env_file:
      - .env
      
volumes:
  modcore_postgres: